/*******************************************************************************
 * In the Hi-WAY project we propose a novel approach of executing scientific
 * workflows processing Big Data, as found in NGS applications, on distributed
 * computational infrastructures. The Hi-WAY software stack comprises the func-
 * tional workflow language Cuneiform as well as the Hi-WAY ApplicationMaster
 * for Apache Hadoop 2.x (YARN).
 *
 * List of Contributors:
 *
 * Hannes Schuh (HU Berlin)
 * Marc Bux (HU Berlin)
 * Jörgen Brandt (HU Berlin)
 * Ulf Leser (HU Berlin)
 *
 * Jörgen Brandt is funded by the European Commission through the BiobankCloud
 * project. Marc Bux is funded by the Deutsche Forschungsgemeinschaft through
 * research training group SOAMED (GRK 1651).
 *
 * Copyright 2014 Humboldt-Universität zu Berlin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package de.huberlin.hiwaydb.dal;

// Generated 19.05.2014 12:56:25 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

/**
 * Invocation generated by hbm2java
 */
@Entity
public class Invocation {

	@Id
	@GeneratedValue
	private Long id;
	private Long invocationid;
	@ManyToOne
	private Task task;
	@ManyToOne
	private Workflowrun workflowrun;

	private String hostname;
	private Long scheduleTime;
	private String standardout;
	private String standarderror;

	private long Timestamp;
	private Long realtime;
	private Long realtimein;
	private Long realtimeout;
	private Date didon;

	@OneToMany(mappedBy = "invocation")
	private Set<Inoutput> inoutputs = new HashSet<>(0);
	@OneToMany(mappedBy = "invocation")
	private Set<File> files = new HashSet<>(0);
	@OneToMany(mappedBy = "invocation")
	private Set<Userevent> userevents = new HashSet<>(0);

	public Invocation() {
	}

	public Invocation(long invocationId, Task task, Workflowrun workflowrun) {
		this.invocationid = invocationId;
		this.task = task;
		this.workflowrun = workflowrun;
	}

	public Invocation(long invocationid, Task task, Workflowrun workflowrun, String hostname, Long scheduleTime, String standardOut, String standardError,
			Set<Inoutput> inoutputs, Set<File> files, Set<Userevent> userevents, Long realTime, Long realtimein, Long realtimeout, Date didon, long timestamp) {
		this.invocationid = invocationid;
		this.task = task;
		this.workflowrun = workflowrun;
		this.hostname = hostname;
		this.scheduleTime = scheduleTime;
		this.standardout = standardOut;
		this.standarderror = standardError;
		this.inoutputs = inoutputs;
		this.files = files;
		this.userevents = userevents;
		this.realtime = realTime;
		this.realtimein = realtimein;
		this.realtimeout = realtimeout;
		this.didon = didon;
		this.Timestamp = timestamp;
	}

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public long getInvocationId() {
		return this.invocationid;
	}

	public void setInvocationId(long invocationId) {
		this.invocationid = invocationId;
	}

	public Task getTask() {
		return this.task;
	}

	public void setTask(Task task) {
		this.task = task;
	}

	public Workflowrun getWorkflowrun() {
		return this.workflowrun;
	}

	public void setWorkflowrun(Workflowrun workflowrun) {
		this.workflowrun = workflowrun;
	}

	public String getHostname() {
		return this.hostname;
	}

	public void setHostname(String hostname) {
		this.hostname = hostname;
	}

	public Long getScheduleTime() {
		return this.scheduleTime;
	}

	public void setScheduleTime(Long scheduleTime) {
		this.scheduleTime = scheduleTime;
	}

	public String getStandardOut() {
		return this.standardout;
	}

	public void setStandardOut(String standardOut) {
		this.standardout = standardOut;
	}

	public String getStandardError() {
		return this.standarderror;
	}

	public void setStandardError(String standardError) {
		this.standarderror = standardError;
	}

	public Set<Inoutput> getInoutputs() {
		return this.inoutputs;
	}

	public void setInoutputs(Set<Inoutput> inoutputs) {
		this.inoutputs = inoutputs;
	}

	public Set<File> getFiles() {
		return this.files;
	}

	public void setFiles(Set<File> files) {
		this.files = files;
	}

	public Set<Userevent> getUserevents() {
		return this.userevents;
	}

	public void setUserevents(Set<Userevent> userevents) {
		this.userevents = userevents;
	}

	public Long getRealTime() {
		return this.realtime;
	}

	public void setRealTime(Long realTime) {
		this.realtime = realTime;
	}

	public long getTimestamp() {
		return this.Timestamp;
	}

	public void setTimestamp(long timestamp) {
		this.Timestamp = timestamp;
	}

	public Long getRealTimeIn() {
		return this.realtimein;
	}

	public void setRealTimeIn(Long realtimein) {
		this.realtimein = realtimein;
	}

	public Long getRealTimeOut() {
		return this.realtimeout;
	}

	public void setRealTimeOut(Long realtimeout) {
		this.realtimeout = realtimeout;
	}

	public Date getDidOn() {
		return this.didon;
	}

	public void setDidOn(Date didon) {
		this.didon = didon;
	}

}
