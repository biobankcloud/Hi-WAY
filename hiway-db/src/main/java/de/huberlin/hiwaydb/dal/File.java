/*******************************************************************************
 * In the Hi-WAY project we propose a novel approach of executing scientific
 * workflows processing Big Data, as found in NGS applications, on distributed
 * computational infrastructures. The Hi-WAY software stack comprises the func-
 * tional workflow language Cuneiform as well as the Hi-WAY ApplicationMaster
 * for Apache Hadoop 2.x (YARN).
 *
 * List of Contributors:
 *
 * Hannes Schuh (HU Berlin)
 * Marc Bux (HU Berlin)
 * Jörgen Brandt (HU Berlin)
 * Ulf Leser (HU Berlin)
 *
 * Jörgen Brandt is funded by the European Commission through the BiobankCloud
 * project. Marc Bux is funded by the Deutsche Forschungsgemeinschaft through
 * research training group SOAMED (GRK 1651).
 *
 * Copyright 2014 Humboldt-Universität zu Berlin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package de.huberlin.hiwaydb.dal;

//Generated 19.05.2014 12:56:25 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;

import de.huberlin.hiwaydb.dal.Invocation;

/**
 * File generated by hbm2java
 */
@Entity
public class File {

	@Id
	@GeneratedValue
	private Long id;
	@ManyToOne
	private Invocation invocation;
	private String name;
	private Long size;
	private Long realtimein;
	private Long realtimeout;

	public File() {
	}

	public File(Invocation invocation, String name) {
		this.invocation = invocation;
		this.name = name;
	}

	public File(Invocation invocation, String name, Long realtimeout, Long realtimein, Long size) {
		this.invocation = invocation;
		this.name = name;
		this.size = size;
		this.realtimein = realtimein;
		this.realtimeout = realtimeout;

	}

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Invocation getInvocation() {
		return this.invocation;
	}

	public void setInvocation(Invocation invocation) {
		this.invocation = invocation;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Long getSize() {
		return this.size;
	}

	public void setSize(Long size) {
		this.size = size;
	}

	public Long getRealTimeIn() {
		return this.realtimein;
	}

	public void setRealTimeIn(Long realtimein) {
		this.realtimein = realtimein;
	}

	public Long getRealTimeOut() {
		return this.realtimeout;
	}

	public void setRealTimeOut(Long realtimeout) {
		this.realtimeout = realtimeout;
	}

}
