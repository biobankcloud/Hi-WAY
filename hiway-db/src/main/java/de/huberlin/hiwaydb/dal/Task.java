/*******************************************************************************
 * In the Hi-WAY project we propose a novel approach of executing scientific
 * workflows processing Big Data, as found in NGS applications, on distributed
 * computational infrastructures. The Hi-WAY software stack comprises the func-
 * tional workflow language Cuneiform as well as the Hi-WAY ApplicationMaster
 * for Apache Hadoop 2.x (YARN).
 *
 * List of Contributors:
 *
 * Hannes Schuh (HU Berlin)
 * Marc Bux (HU Berlin)
 * Jörgen Brandt (HU Berlin)
 * Ulf Leser (HU Berlin)
 *
 * Jörgen Brandt is funded by the European Commission through the BiobankCloud
 * project. Marc Bux is funded by the Deutsche Forschungsgemeinschaft through
 * research training group SOAMED (GRK 1651).
 *
 * Copyright 2014 Humboldt-Universität zu Berlin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package de.huberlin.hiwaydb.dal;

// Generated 19.05.2014 12:56:25 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;

/**
 * Task generated by hbm2java
 */
@Entity
public class Task implements java.io.Serializable {

	@Id
	private long taskid;
	private String taskname;
	private String language;
	
	@OneToMany(mappedBy="task")
	private Set<Invocation> invocations = new HashSet<Invocation>(0);

	public Task() {
	}

	public Task(long taskId, String language) {
		this.taskid = taskId;
		this.language = language;
	}

	public Task(long taskId, String taskName, String language,
			Set<Invocation> invocations) {
		this.taskid = taskId;
		this.taskname = taskName;
		this.language = language;
		this.invocations = invocations;
	}

	public long getTaskId() {
		return this.taskid;
	}

	public void setTaskId(long taskId) {
		this.taskid = taskId;
	}

	public String getTaskName() {
		return this.taskname;
	}

	public void setTaskName(String taskName) {
		this.taskname = taskName;
	}

	public String getLanguage() {
		return this.language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	public Set<Invocation> getInvocations() {
		return this.invocations;
	}

	public void setInvocations(Set<Invocation> invocations) {
		this.invocations = invocations;
	}

}
